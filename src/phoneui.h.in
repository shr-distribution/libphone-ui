/*
 *  Copyright (C) 2008
 *      Authors (alphabetical) :
 *              quickdev
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Public License as published by
 *  the Free Software Foundation; version 2 of the license.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser Public License for more details.
 */

#ifndef _PHONEUI_H
#define _PHONEUI_H
#include <glib.h>

#include "phoneui-utils.h"

#define PHONEUI_CONFIG "@SYSCONFDIR@/libphoneui.conf"
#define PHONEUI_MODULES_PATH "@LIBDIR@/phoneui/modules/"

enum PhoneuiCallState {
	PHONEUI_CALL_STATE_INCOMING = 0,
	PHONEUI_CALL_STATE_OUTGOING,
	PHONEUI_CALL_STATE_ACTIVE,
	PHONEUI_CALL_STATE_HELD,
	PHONEUI_CALL_STATE_RELEASE
};


void phoneui_load(const char *application_name);
void *phoneui_get_function(const char *name, void *phoneui_library);

/* Implementation prototypes */
void phoneui_init(int argc, char **argv, void (*exit_cb) ());
void phoneui_loop();

/* Calls */
void phoneui_incoming_call_show(const int id, const int status,
				 const char *number);
void phoneui_incoming_call_hide(const int id);
void phoneui_outgoing_call_show(const int id, const int status,
				 const char *number);
void phoneui_outgoing_call_hide(const int id);

/* Contacts */
void phoneui_contacts_show();
void phoneui_contacts_contact_show(const char *contact_path);
void phoneui_contacts_contact_new(GHashTable *values);
void phoneui_contacts_contact_edit(const char *contact_path);

/* Messages */
void phoneui_messages_show();
void phoneui_messages_message_show(const char *path);
void phoneui_messages_message_new(GHashTable *options);

/* Dialer */
void phoneui_dialer_show();

/* Notifications */
void phoneui_dialog_show(const int type);
void phoneui_sim_auth_show(const int status);
void phoneui_sim_auth_hide(const int status);
void phoneui_ussd_show(int mode, const char *message);

/* Quick settings */
void phoneui_quick_settings_show();
void phoneui_quick_settings_hide();

/* Idle Screen */
void phoneui_idle_screen_show();
void phoneui_idle_screen_hide();
void phoneui_idle_screen_toggle();
void phoneui_idle_screen_update_missed_calls(const int amount);
void phoneui_idle_screen_update_unfinished_tasks(const int amount);
void phoneui_idle_screen_update_unread_messages(const int amount);
void phoneui_idle_screen_update_power(const int capacity);
void phoneui_idle_screen_update_call(enum PhoneuiCallState state,
		const char *name, const char *number);
void phoneui_idle_screen_update_signal_strength(const int signal);
void phoneui_idle_screen_update_provider(const char *provider);
void phoneui_idle_screen_update_resource(const char *resource, const int state);
void phoneui_idle_screen_update_alarm(const int alarm);
void phoneui_idle_screen_update_profile(const char *profile);

/* Phone Log */
void phoneui_phone_log_show();
void phoneui_phone_log_hide();


#endif

